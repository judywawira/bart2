<style>
	.tt_controls_date_of_confirmatory_hiv_test #num { display:none; }

	.tt_controls_date_art_last_taken #num { display:none; }

	.tt_controls_date_of_confirmatory_hiv_test table {  position: absolute; top: -360px; }

	.tt_controls_date_art_last_taken table {  position: absolute; top: -360px; }

	.tt_controls_last_arv_drugs_taken .keyboard { display:none; }




  .tt_controls_cd4_count #qwerty , .tt_controls_cd4_percent #qwerty { 
    display: none; 
   }                              
                                                                                
  .tt_controls_cd4_count #equals, .tt_controls_cd4_percent #equals { 
    display: inline; 
  }                            
                                                                                
  .tt_controls_cd4_count #lessthan, .tt_controls_cd4_count #greaterthan {       
    position: absolute;                                                         
    right: 65%;                                                                 
  }                                                                             
                                                           
  .tt_controls_cd4_percent #lessthan, .tt_controls_cd4_percent #greaterthan {       
    position: absolute;                                                         
    right: 65%;                                                                 
  }                                                                             
                     
  .tt_controls_cd4_count #greaterthan , .tt_controls_cd4_percent #greaterthan{                                         
    position: absolute;                                                         
    right: 65%;                                                                 
    top: 5px;                                                                   
  }                                                                             
                                                                                
  .tt_controls_cd4_count #lessthan , .tt_controls_cd4_percent #lessthan {                                            
    top: 145px;                                                                 
  }

  .tt_controls_cd4_count #lessthan, .tt_controls_cd4_count #greaterthan { display:block; float:right }
  .tt_controls_cd4_percent #lessthan, .tt_controls_cd4_percent #greaterthan { display:block; float:right }

  .tt_controls_initial_weight_kg #qwerty , .tt_controls_initial_height_cm #qwerty { 
    display: none; 
   }                              
                                                                                
</style>

<script>
	var tt_cancel_destination = "/patients/show/<%= @patient.patient_id %>"
  var patient_age = null;

  function checkBirthDate(){
    var dateCheck = "";
    var confirmatoryHIVtestDate = new Date ($('confirmatory_hiv_test_date').value);
    var patientBirthDate = new Date("<%= @patient.person.birthdate.year %>","<%= @patient.person.birthdate.month - 1 %>","<%= @patient.person.birthdate.day %>");

    if (patientBirthDate <= confirmatoryHIVtestDate){
      dateCheck = 'true'
    } else {
      dateCheck = 'false'
    }
    return dateCheck; 
  }

  function showConditions() {
    if ($("ever_registered_at_ART_clinic").value == "NO") {
      return false;
    }else if($('has_transfer_letter').value == "YES") {
      return true;
    }else {return false;}
  }

  function updateCD4CountKeyPad() {                                             
    curr_page = tstCurrentPage - 1                                              
    buttons = document.getElementsByClassName("keyboardButton");                
    $("clearButton").setAttribute("onmousedown","clearInput();updateCD4CountKeyPad();");
    $("backButton").setAttribute("onmousedown",";gotoPage(" + curr_page + ", null, true);resetPad();");
    $("nextButton").setAttribute("onmousedown","gotoNextPage();resetPad();");   
                                                                                
    for(i = 0; i < buttons.length ; i++) {                                      
      if (buttons[i].id == "equals" || buttons[i].id == "greaterthan" || buttons[i].id == "lessthan") {
        buttons[i].disabled = false;                                            
        if( buttons[i].id == "equals"){                                         
          buttons[i].setAttribute("onmousedown","press('=');resetKeyPad();");   
        }else if( buttons[i].id == "lessthan") {                                
          buttons[i].setAttribute("onmousedown","press('<');resetKeyPad();");   
        }else if( buttons[i].id == "greaterthan") {                             
          buttons[i].setAttribute("onmousedown","press('>');resetKeyPad();");   
        }                                                                       
      }else{                                                                    
        buttons[i].disabled = true;                                             
      }                                                                         
    }                                                                           
  }


   function updateCD4Count() {                                                   
    var cd4_available = $('new_cd4_count_available').value == 'YES';            
    var cd4_count = cd4_available ? $('cd4_count').value : null;                
                                                                                
    try { cd4_count_numeric = parseInt(cd4_count); } catch(e) { cd4_count_numeric = null; }
                                                                                
    if (cd4_count_numeric == null || ''+cd4_count_numeric == 'NaN') {           
      try {                                                                     
        var matches = cd4_count.match(/^(>|<|=)([0-9\.]+)$/);                   
        cd4_count_modifier = matches[1];                                        
        cd4_count_estimate = parseInt(matches[2]);                              
        cd4_count_numeric = cd4_count_estimate;                                 
        if (cd4_count_modifier == '<') cd4_count_numeric -= 1;                  
        if (cd4_count_modifier == '>') cd4_count_numeric += 1;                  
      } catch(e) {                                                              
        cd4_count_modifier = null;                                              
        cd4_count_estimate = null;                                              
        cd4_count_numeric = null;                                               
      }                                                                         
    }                                                                           
                                                                                    
    if (cd4_count_numeric == null || '' + cd4_count_numeric == 'NaN') {         
      $('cd4_count_less_than_250').value = "UNKNOWN";                           
      $('cd4_count_less_than_350').value = "UNKNOWN";                           
    } else {                                                                    
      $('cd4_count_less_than_250').value = (cd4_count_numeric <= 250) ? "YES" : "NO";
      $('cd4_count_less_than_350').value = (cd4_count_numeric <= 350) ? "YES" : "NO";
    }                                                                        
  }                                                                             
   
  function updateCD4Percent() {                                                 
    var cd4_percent_available = $('new_cd4_percent_available').value == 'YES';  
    var cd4_percent = cd4_percent_available ? $('cd4_percent').value : null;    
    var cd4_percent_numeric, cd4_percent_estimate, cd4_percent_modifier;        
                                                                                
    try { cd4_percent_numeric = parseInt(cd4_percent); } catch(e) { cd4_percent_numeric = null; }
                                                                                
    if (cd4_percent_numeric == null || ''+cd4_percent_numeric == 'NaN') {       
      try {                                                                     
        var matches = cd4_percent.match(/^(>|<|=)([0-9\.]+)$/);                   
        cd4_percent_modifier = matches[1];                                      
        cd4_percent_estimate = parseInt(matches[2]);                            
        cd4_percent_numeric = cd4_percent_estimate;                             
        if (cd4_percent_modifier == '<') cd4_percent_numeric -= 1;              
        if (cd4_percent_modifier == '>') cd4_percent_numeric += 1;              
      } catch(e) {                                                              
        cd4_percent_modifier = null;                                            
        cd4_percent_estimate = null;                                            
        cd4_percent_numeric = null;                                             
      }                                                                         
    }                                                                           
                                                                                
    if (cd4_percent_numeric == null || ''+cd4_percent_numeric == 'NaN') {       
      $('cd4_percent_less_than_25').value = "UNKNOWN";                          
    } else {                                                                    
      $('cd4_percent_less_than_25').value = (cd4_percent_numeric < 25) ? "YES" : "NO";
    }                                                                           
  }



  function resetPad() {                                                         
    curr_page = tstCurrentPage - 1                                              
    buttons = document.getElementsByClassName("keyboardButton");                
    for(i = 0; i < buttons.length ; i++) {                                      
        buttons[i].disabled = false;                                            
    }                                                                           
    $("clearButton").setAttribute("onmousedown","clearInput();");               
    $("backButton").setAttribute("onmousedown",";gotoPage(" + curr_page + ", null, true);");
    $("nextButton").setAttribute("onmousedown","gotoNextPage();");              
  }                                                                             
                                                                                
  function resetKeyPad() {                                                      
    buttons = document.getElementsByClassName("keyboardButton");                
    for(i = 0; i < buttons.length ; i++) {                                      
      if (buttons[i].id == "equals" || buttons[i].id == "greaterthan" || buttons[i].id == "lessthan") {
        buttons[i].disabled = true;                                             
      }else{                                                                    
        buttons[i].disabled = false;                                            
      }                                                                         
    }                                                                           
  }  

  function updateCD4CountKeyPad() {                                             
    curr_page = tstCurrentPage - 1                                              
    buttons = document.getElementsByClassName("keyboardButton");                
    $("clearButton").setAttribute("onmousedown","clearInput();updateCD4CountKeyPad();");
    $("backButton").setAttribute("onmousedown",";gotoPage(" + curr_page + ", null, true);resetPad();");
    $("nextButton").setAttribute("onmousedown","gotoNextPage();resetPad();");   
                                                                                
    for(i = 0; i < buttons.length ; i++) {                                      
      if (buttons[i].id == "equals" || buttons[i].id == "greaterthan" || buttons[i].id == "lessthan") {
        buttons[i].disabled = false;                                            
        if( buttons[i].id == "equals"){                                         
          buttons[i].setAttribute("onmousedown","press('=');resetKeyPad();");   
        }else if( buttons[i].id == "lessthan") {                                
          buttons[i].setAttribute("onmousedown","press('<');resetKeyPad();");   
        }else if( buttons[i].id == "greaterthan") {                             
          buttons[i].setAttribute("onmousedown","press('>');resetKeyPad();");   
        }                                                                       
      }else{                                                                    
        buttons[i].disabled = true;                                             
      }                                                                         
    }                                                                           
  }  

  function calculateWHOstage() {
    stage = "I";
    if ($("stage_4_conditions").value.length > 0) {
      stage = "IV";
    }else if ($("stage_3_conditions").value.length > 0) {
      stage = "III";
    }else if ($("stage_2_conditions").value.length > 0) {
      stage = "II";
    }
    var startDate = new Date($("date_started_art").value);
    var patientBirthdate = new Date("<%=@patient.person.birthdate %>");
    var dateCreated = new Date("<%=@patient.person.date_created %>");
    var patientBirthdateEstimated = "<%=@patient.person.birthdate_estimated %>";
    patient_age = age(patientBirthdate , patientBirthdateEstimated , dateCreated, startDate);

    if (patient_age <= 14) {
      $("who_stage").value = "WHO stage " + stage + " peds";
    }else{
      $("who_stage").value = "WHO stage " + stage + " adult";
    }
  } 
  
  function age(birthdate,birthdate_estimated,date_created,today) {
    patient_age = (today.getFullYear() - birthdate.getFullYear()) + ((today.getFullYear() - (birthdate.getMonth() + 1)) + ((today.getDate() - birthdate.getDate()) < 0 ? -1 : 0) < 0 ? - 1 : 0)
    birth_date= birthdate                                                   
    estimate = birthdate_estimated                                           
    if (birth_date.month == 7 && birth_date.day == 1 && estimate == 1 && Time.now.month < birth_date.month && date_created.getFullYear() == (new Date().getFullYear())) {
      return patient_age + 1                                                   
    }else{
      return patient_age
    }
  } 

  function calculateReasonForStarting() {
    var reason_for_art = $("reason_for_art").value;
    var adultOrPeds = (patient_age > 14) ? "ADULT" : "PEDS";

    if (reason_for_art.match(/WHO stage/i)) {
      $("reason_for_art_eligibility").value = reason_for_art + " " + adultOrPeds;
    }else{
      $("reason_for_art_eligibility").value = reason_for_art;
    }
  } 
</script>
<%#= raise @patient.person.birthdate.day.to_s %>
<% if @patient.patient_programs.current.local.map(&:program).map(&:name).include?('HIV PROGRAM') %>
	<div class="inputPage NoKeyboard" id="page" style="display: block;">
		<div id="trigger"></div>
		<div id="infoBar" class="infoBarClass"></div>
		<label id="helpText" class="helpTextClass" for="">This patient has already been initiated in the HIV program at this location</label>
	</div>
	<div id="buttons" class="buttonsDiv" style="top:456;">
		<div id="tt_extraButtons"></div>
		<button onmousedown="window.location=tt_cancel_destination;" id="cancelButton" class="button navButton red"><span>Cancel</span></button>
	</div>
	<script>
		setTimeout("window.location=tt_cancel_destination;", 5000);
	</script>
<% else %>
	<form id='appointment' action="/encounters/create" method='post'>
		<%= hidden_field_tag "encounter[encounter_type_name]", "ART_INITIAL" %>
		<%= hidden_field_tag "encounter[patient_id]", @patient.id %>
		<%= hidden_field_tag "encounter[encounter_datetime]", DateTime.now() %>
		<%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>

		<label for='ever_received_art'>Ever received ARVs for treatment or prophylaxis?</label>
		<%= hidden_field_tag("programs[][patient_program_id]", nil) %>
		<%= hidden_field_tag("programs[][program_id]", Program.find_by_name('HIV PROGRAM').id) %>
		<%= hidden_field_tag("programs[][location_id]", Location.current_health_center.id) %>
		<%= hidden_field_tag("programs[][date_enrolled]", session[:datetime] ) %>
		<%= hidden_field_tag("programs[][states][][state]", "Pre-ART (Continue)") %>
	  
		<%= touch_select_tag("EVER RECEIVED ART", @patient, options_for_select([['Yes','YES'],['No','NO']]), {:id => 'ever_received_art'}) %>

		<%= touch_date_tag "DATE ART LAST TAKEN", @patient, nil,
			{	:id => "date_art_last_taken",
			 	:absoluteMax => Date.today,
			 	:condition => '$("ever_received_art").value == "YES"',
			 	:helpText => "Date ART last taken"} %>

		<%= touch_yes_no_unknown_tag "HAS THE PATIENT TAKEN ART IN THE LAST TWO MONTHS", @patient, nil,
			{	:id => "taken_art_in_last_two_months",
			 	:condition => '$("date_art_last_taken").value.toUpperCase() == "UNKNOWN"',
			 	:helpText => "Taken ART in the last two months?" } %>

		<%= touch_yes_no_unknown_tag "HAS THE PATIENT TAKEN ART IN THE LAST TWO WEEKS", @patient, nil,
			{	:id => "taken_art_in_last_two_weeks",
			 	:condition => '$("taken_art_in_last_two_months").value == "YES" && $("date_art_last_taken").value.toUpperCase() == "UNKNOWN"',
			 	:helpText => "Taken ART in the last two weeks?" } %>

		<%= touch_select_tag "LAST ART DRUGS TAKEN", @patient, options_for_select(@arv_drugs),
			{	:id => "last_art_drugs_taken",
				:multiple => true,
			 	:condition => '$("ever_received_art").value == "YES"',
			 	:helpText => "Last ARV drugs taken" } %>

		<%= touch_yes_no_tag "Ever registered at ART clinic", @patient, nil,
			{	:id => "ever_registered_at_ART_clinic",
			 	:helpText => "Ever registered at an ART clinic?"} %>

		<%= touch_yes_no_tag "HAS TRANSFER LETTER", @patient, nil,
			{	:id => "has_transfer_letter",
			 	:condition => '$("ever_registered_at_ART_clinic").value == "YES"',
			 	:helpText => "Has transfer letter?"} %>

		<%= touch_location_tag "LOCATION OF ART INITIATION", @patient, nil,
			{	:id => "location_of_art_initialization",
			 	:condition => '$("ever_registered_at_ART_clinic").value == "YES"',
			 	:optional => false,
			 	:helpText => "Location of ART initiation" } %>

		<%= touch_text_field_tag "ART NUMBER AT PREVIOUS LOCATION", @patient, nil,
			{	:id => "previous_art_number",
				:condition => '$("ever_registered_at_ART_clinic").value == "YES"',
				:helpText => "ART number at previous location" } %>


    <% "..............................................................." %>
		
    <%= touch_date_tag "Date antiretrovirals started", @patient, nil,
			{	:id => "date_started_art",
			 	:absoluteMax => Date.today,
				:condition => '$("ever_registered_at_ART_clinic").value == "YES" && showConditions()',
			 	:helpText => "Date started ART"} %>


      <%= touch_select_tag "WHO STAGES CRITERIA PRESENT", @patient, options_for_select(@who_stage_i),
          {:id => "stage_1_conditions",                                         
           :multiple => true,                                                   
           :condition => 'showConditions()',                            
           :optional => true,                                                   
           :helpText => "Stage 1 Conditions",                                   
           :tt_pageStyleClass => "NoKeyboard NoInput small" } %>                
                                                                                
      <%= touch_select_tag "WHO STAGES CRITERIA PRESENT", @patient,  options_for_select(@who_stage_ii),
        {:id => "stage_2_conditions",                                         
         :multiple => true,                                                   
         :optional => true,                                                   
         :condition => 'showConditions()',                            
         :helpText => "Stage 2 Conditions",                                   
         :tt_pageStyleClass => "NoKeyboard NoInput small"  } %>               
                                                                                
                                                                                
      <%= touch_select_tag "WHO STAGES CRITERIA PRESENT", @patient,  options_for_select(@who_stage_iii),
        {:id => "stage_3_conditions",                                         
         :multiple => true,                                                   
         :optional => true,                                                   
         :condition => 'showConditions()',                            
         :helpText => "Stage 3 Conditions",                                   
         :tt_pageStyleClass => "NoKeyboard NoInput small"  } %>               
                                                                                
                                                                                
      <%= touch_select_tag "WHO STAGES CRITERIA PRESENT", @patient,  options_for_select(@who_stage_iv),
        {:id => "stage_4_conditions",                                         
         :multiple => true,                                                   
         :optional => true,                                                   
         :condition => 'showConditions()',                            
         :helpText => "Stage 4 Conditions",                                   
         :tt_pageStyleClass => "NoKeyboard NoInput small"  } %>

      <%
          @reasons = ["WHO stage I","WHO stage II","WHO stage III","WHO stage IV",
                      "PRESUMED SEVERE HIV","HIV DNA POLYMERASE CHAIN REACTION",
                      "HIV infected","CD4 COUNT LESS THAN OR EQUAL TO 750",
                      "CD4 COUNT LESS THAN OR EQUAL TO 350","CD4 COUNT LESS THAN OR EQUAL TO 250",
                      "LYMPHOCYTE COUNT BELOW THRESHOLD WITH WHO STAGE 2"]
          if not @patient.person.gender == "F"
            @reasons << "PATIENT PREGNANT"
            @reasons << "BREASTFEEDING"
          end
        art_reasons = []
        @reasons.map do |reason|
          art_reasons << [reason,reason]
        end
      %>

      <%= select_tag("reason_for_art", options_for_select(art_reasons,[]),
        :helpText => "Reason for ART eligibility",
        :id => 'reason_for_art', 
        :allowFreeText => false,                                                  
        :condition => 'showConditions()',                            
        :tt_onLoad => "calculateWHOstage();",                    
        :tt_onUnLoad => "calculateReasonForStarting();",                    
        :helpText => "Reason for ART eligibility",
        :tt_pageStyleClass => 'NoKeyboard') %>



     <%= touch_hidden_tag "WHO STAGE", @patient, "", :id => "who_stage" %>
     <%= touch_hidden_tag "REASON FOR ART ELIGIBILITY", @patient, "", :id => "reason_for_art_eligibility" %>

    <% "..............................................................." %>
      <%= select_tag "new_cd4_count_available", options_for_select([['Yes','YES'],['No','NO']]), 
          :id => 'new_cd4_count_available', 
          :condition => 'showConditions()',                            
          :helpText => "Initial CD4 Count available",
          :tt_pageStyleClass => 'NoKeyboard' %>


      <%= text_field_tag "observations[][value_numeric]", nil,                  
        {:id => "height",                                                       
         :field_type => 'number',                                               
         :condition => 'showConditions()',                            
         :min => number_with_precision(0, :precision => 1),           
         :max => number_with_precision(183, :precision => 1),           
         :absoluteMin => 10,                                                    
         :absoluteMax => 228,                                                   
         :helpText => "Initial Height (CM)",
         :units => 'cm',                                                        
         :validationRule => "^([0-9]+)|Unknown$",                               
         :validationMessage => "You must enter numbers only (for example 157)", 
         :tt_pageStyleClass => "Numeric NumbersOnly"} %>                        
      <%= hidden_field_tag("observations[][concept_name]", "HEIGHT (CM)") %>    
      <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>        
      <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %> 

      
      <%= text_field_tag "observations[][value_numeric]", nil,                  
        {:id => "weight",                                                       
         :field_type => 'number',                                               
         :min => number_with_precision(0, :precision => 1),           
         :max => number_with_precision(80, :precision => 1),           
         :condition => 'showConditions()',                            
         :helpText => "Initial Weight (Kg)",
         :absoluteMin => 0,                                                     
         :absoluteMax => 250,                                                   
         :units => 'kg',                                                        
         :validationRule => "([0-9]+\\.[0-9])|Unknown$",                        
         :validationMessage => "You must enter a decimal between 0 and 9 (for example: 54<b>.6</b>)",
         :tt_pageStyleClass => "Numeric NumbersOnlyWithDecimal"} %>             
      <%= hidden_field_tag("observations[][concept_name]", "WEIGHT (KG)") %>    
      <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>        
      <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>


    <% "..............................................................." %>
      <%= touch_location_tag "CD4 COUNT LOCATION", @patient, nil,               
        {:id => "cd4_count_location",                                           
         :condition => '$("new_cd4_count_available").value == "YES" && showConditions()',              
         :helpText => "CD4 Count Location"} %>                                  
                                                                                
      <%= touch_date_tag "CD4 COUNT DATETIME", @patient, nil,                   
        {:id => "cd4_count_date",                                               
         :condition => '$("new_cd4_count_available").value == "YES" && showConditions()',              
         :helpText => "CD4 Count Date",                                         
         :max => "#{session[:datetime].to_date rescue Date.today}"} %>          
                                                                                
      <%= touch_cd4_count_numeric_tag "CD4 COUNT", @patient, nil,               
        {:id => "cd4_count",                                                    
         :condition => '$("new_cd4_count_available").value == "YES" && showConditions()',              
         :helpText => "CD4 Count",                                              
         :max => 1000 ,                                                         
         :min => 1 ,                                                            
         :tt_onLoad => "updateCD4CountKeyPad();",                               
         :tt_onUnLoad => "updateCD4Count();"} %>

         <%= touch_hidden_tag "CD4 COUNT LESS THAN OR EQUAL TO 250", @patient, "", :id => "cd4_count_less_than_250" %>
         <%= touch_hidden_tag "CD4 COUNT LESS THAN OR EQUAL TO 350", @patient, "", :id => "cd4_count_less_than_350" %>

      <%= select_tag "new_cd4_percent_available", options_for_select([['Yes','YES'],['No','NO']]), 
          :id => 'new_cd4_percent_available', 
          :condition => 'showConditions() == true',                            
          :helpText => "Initial CD4 percent available",
          :tt_pageStyleClass => 'NoKeyboard' %>

      <%= touch_cd4_count_numeric_tag "CD4 PERCENT", @patient, nil,               
          {:id => "cd4_percent",                                                
           :condition => '$("new_cd4_percent_available").value == "YES" && showConditions()',              
           :helpText => "CD4 Percent",                                          
           :tt_onLoad => "updateCD4CountKeyPad();",                               
           :tt_onUnLoad => 'updateCD4Percent()'} %>                             
                                                                                
      <%= touch_hidden_tag "CD4 PERCENT LESS THAN 25", @patient, "", :id => "cd4_percent_less_than_25" %>

    <% "..............................................................." %>


		<%  if @cell_number.to_i != 0 %>
			<%= touch_yes_no_unknown_tag "SEND SMS", @patient, nil,
				{	:id => "send_sms",
					:helpText => 'Can we send you an SMS for HIV care follow-up?'} %>
		<% end %>

		<%= touch_yes_no_tag "FOLLOW UP AGREEMENT", @patient, nil,
			{	:id => "agrees_to_followup",
				:helpText => "Can we follow-up with you for HIV care?" } %>

		<%= touch_select_tag "CONFIRMATORY HIV TEST TYPE", @patient, options_for_select([['HIV Rapid Test','HIV RAPID TEST'],['HIV PCR','HIV DNA polymerase chain reaction'],['Unknown','UNKNOWN']]),
			{	:id => "type_of_confirmatory_hiv_test",
			 	:helpText => "Type of confirmatory HIV test" } %>

		<%= touch_location_tag "CONFIRMATORY HIV TEST LOCATION", @patient, nil,
			{	:id => "confirmatory_hiv_test_location",
			 	:helpText => "Location of confirmatory HIV test"} %>

		<%= touch_date_tag "CONFIRMATORY HIV TEST DATE", @patient, nil,
			{	:id => "confirmatory_hiv_test_date",
			 	:max => "#{session[:datetime].to_date rescue Date.today}",
			 	:validationCode => "checkBirthDate() == 'true'",
			 	:validationMessage => "Confirmatory HIV test date is greater than patient's date of birth #{@patient.person.birthdate}",
			 	:helpText => "Date of confirmatory HIV test"} %>

   <% session_date = session[:datetime].to_date rescue nil                       
    if session_date %>

    <p><label for="filter_provider">Staff who provided the information (Provider)</label></br>
<%= text_field "filter" , 'provider', :helpText => 'Staff who provided the information (Provider)', :ajaxURL => '/user/username?username=' %></p>
    <% else %>
      <%= hidden_field_tag "filter[provider]", nil %>
    <%end%>
		<%= submit_tag "Finish" %>    
	</form>
<% end %>
